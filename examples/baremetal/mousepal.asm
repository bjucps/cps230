; CpS 230 Example Program: DOSBox VGA mode palette animation and mouse demo
; (c) 2016, BJU
;------------------------------------------------------------
bits 16

org	0x100

section .data
last_tick	dw	0

; Smooth-blending 256 color palette
; generated by a Python script
; (RGB values in the range 0-63)
palette	db	0, 0, 0
	db	1, 0, 0
	db	2, 0, 0
	db	3, 0, 0
	db	4, 0, 0
	db	5, 0, 0
	db	6, 0, 0
	db	7, 0, 0
	db	8, 0, 0
	db	9, 0, 0
	db	10, 0, 0
	db	11, 0, 0
	db	12, 0, 0
	db	13, 0, 0
	db	14, 0, 0
	db	15, 0, 0
	db	16, 0, 0
	db	17, 0, 0
	db	18, 0, 0
	db	19, 0, 0
	db	20, 0, 0
	db	21, 0, 0
	db	22, 0, 0
	db	23, 0, 0
	db	24, 0, 0
	db	25, 0, 0
	db	26, 0, 0
	db	27, 0, 0
	db	28, 0, 0
	db	29, 0, 0
	db	30, 0, 0
	db	31, 0, 0
	db	32, 0, 0
	db	33, 0, 0
	db	34, 0, 0
	db	35, 0, 0
	db	36, 0, 0
	db	37, 0, 0
	db	38, 0, 0
	db	39, 0, 0
	db	40, 0, 0
	db	41, 0, 0
	db	42, 0, 0
	db	43, 0, 0
	db	44, 0, 0
	db	45, 0, 0
	db	46, 0, 0
	db	47, 0, 0
	db	48, 0, 0
	db	49, 0, 0
	db	50, 0, 0
	db	51, 0, 0
	db	52, 0, 0
	db	53, 0, 0
	db	54, 0, 0
	db	55, 0, 0
	db	56, 0, 0
	db	57, 0, 0
	db	58, 0, 0
	db	59, 0, 0
	db	60, 0, 0
	db	61, 0, 0
	db	62, 0, 0
	db	63, 0, 0
	db	63, 0, 0
	db	63, 1, 0
	db	63, 2, 0
	db	63, 3, 0
	db	63, 4, 0
	db	63, 5, 0
	db	63, 6, 0
	db	63, 7, 0
	db	63, 8, 0
	db	63, 9, 0
	db	63, 10, 0
	db	63, 11, 0
	db	63, 12, 0
	db	63, 13, 0
	db	63, 14, 0
	db	63, 15, 0
	db	63, 16, 0
	db	63, 17, 0
	db	63, 18, 0
	db	63, 19, 0
	db	63, 20, 0
	db	63, 21, 0
	db	63, 22, 0
	db	63, 23, 0
	db	63, 24, 0
	db	63, 25, 0
	db	63, 26, 0
	db	63, 27, 0
	db	63, 28, 0
	db	63, 29, 0
	db	63, 30, 0
	db	63, 31, 0
	db	63, 32, 0
	db	63, 33, 0
	db	63, 34, 0
	db	63, 35, 0
	db	63, 36, 0
	db	63, 37, 0
	db	63, 38, 0
	db	63, 39, 0
	db	63, 40, 0
	db	63, 41, 0
	db	63, 42, 0
	db	63, 43, 0
	db	63, 44, 0
	db	63, 45, 0
	db	63, 46, 0
	db	63, 47, 0
	db	63, 48, 0
	db	63, 49, 0
	db	63, 50, 0
	db	63, 51, 0
	db	63, 52, 0
	db	63, 53, 0
	db	63, 54, 0
	db	63, 55, 0
	db	63, 56, 0
	db	63, 57, 0
	db	63, 58, 0
	db	63, 59, 0
	db	63, 60, 0
	db	63, 61, 0
	db	63, 62, 0
	db	63, 63, 0
	db	63, 63, 0
	db	63, 63, 1
	db	63, 63, 2
	db	63, 63, 3
	db	63, 63, 4
	db	63, 63, 5
	db	63, 63, 6
	db	63, 63, 7
	db	63, 63, 8
	db	63, 63, 9
	db	63, 63, 10
	db	63, 63, 11
	db	63, 63, 12
	db	63, 63, 13
	db	63, 63, 14
	db	63, 63, 15
	db	63, 63, 16
	db	63, 63, 17
	db	63, 63, 18
	db	63, 63, 19
	db	63, 63, 20
	db	63, 63, 21
	db	63, 63, 22
	db	63, 63, 23
	db	63, 63, 24
	db	63, 63, 25
	db	63, 63, 26
	db	63, 63, 27
	db	63, 63, 28
	db	63, 63, 29
	db	63, 63, 30
	db	63, 63, 31
	db	63, 63, 32
	db	63, 63, 33
	db	63, 63, 34
	db	63, 63, 35
	db	63, 63, 36
	db	63, 63, 37
	db	63, 63, 38
	db	63, 63, 39
	db	63, 63, 40
	db	63, 63, 41
	db	63, 63, 42
	db	63, 63, 43
	db	63, 63, 44
	db	63, 63, 45
	db	63, 63, 46
	db	63, 63, 47
	db	63, 63, 48
	db	63, 63, 49
	db	63, 63, 50
	db	63, 63, 51
	db	63, 63, 52
	db	63, 63, 53
	db	63, 63, 54
	db	63, 63, 55
	db	63, 63, 56
	db	63, 63, 57
	db	63, 63, 58
	db	63, 63, 59
	db	63, 63, 60
	db	63, 63, 61
	db	63, 63, 62
	db	63, 63, 63
	db	63, 63, 63
	db	63, 63, 63
	db	62, 62, 62
	db	61, 61, 61
	db	60, 60, 60
	db	59, 59, 59
	db	58, 58, 58
	db	57, 57, 57
	db	56, 56, 56
	db	55, 55, 55
	db	54, 54, 54
	db	53, 53, 53
	db	52, 52, 52
	db	51, 51, 51
	db	50, 50, 50
	db	49, 49, 49
	db	48, 48, 48
	db	47, 47, 47
	db	46, 46, 46
	db	45, 45, 45
	db	44, 44, 44
	db	43, 43, 43
	db	42, 42, 42
	db	41, 41, 41
	db	40, 40, 40
	db	39, 39, 39
	db	38, 38, 38
	db	37, 37, 37
	db	36, 36, 36
	db	35, 35, 35
	db	34, 34, 34
	db	33, 33, 33
	db	32, 32, 32
	db	31, 31, 31
	db	30, 30, 30
	db	29, 29, 29
	db	28, 28, 28
	db	27, 27, 27
	db	26, 26, 26
	db	25, 25, 25
	db	24, 24, 24
	db	23, 23, 23
	db	22, 22, 22
	db	21, 21, 21
	db	20, 20, 20
	db	19, 19, 19
	db	18, 18, 18
	db	17, 17, 17
	db	16, 16, 16
	db	15, 15, 15
	db	14, 14, 14
	db	13, 13, 13
	db	12, 12, 12
	db	11, 11, 11
	db	10, 10, 10
	db	9, 9, 9
	db	8, 8, 8
	db	7, 7, 7
	db	6, 6, 6
	db	5, 5, 5
	db	4, 4, 4
	db	3, 3, 3
	db	2, 2, 2
	db	1, 1, 1

section .text
main:
	cld				; DF=0; lodsb moves forward
	
	; Set VGA low-res/high-color graphics mode
	; (320x200 pixels, 256 colors, 1 byte per pixel)
	mov	ax, 0x0013
	int	0x10
	
	; Draw sequential values to the framebuffer (happens to produce a rainbow effect)
	; (Still using the default palette)
	mov	ax, 0x0A000
	mov	es, ax
	mov	cx, 320*100
	mov	di, 0
.screen:
	mov	ax, di
	mov	al, ah
	stosw
	loop	.screen
	
	; Turn on the mouse cursor
	mov	ax, 0x0001
	int	0x33
	
	; Read a key (use BIOS routines instead of DOS)
	mov	ah, 0x10
	int	0x16
	
	mov	di, 0
.palcycle:
	; Select starting color (DI) for VGA palette transformation
	; (Color transforms "wrap" around, so if we start at color
	; 200, the first 56 colors in the table will go in palette
	; slots 200-255, then the remaining 200 will go in 0-199...)
	mov	dx, 0x3C8	; "starting color" port
	mov	ax, di
	xor	ah, ah
	out	dx, al
	
	; Blast the color table out to the VGA registers
	mov	cx, 256
	mov	dx, 0x3C9	; "R/G/B data" port
	mov	si, palette	; source = palette array
.palloop:
	lodsb
	out	dx, al		; Red
	lodsb
	out	dx, al		; Green
	lodsb
	out	dx, al		; Blue
	loop	.palloop
	
	; Delay loop (use BIOS to detect clock tick)
	mov	ah, 0
	int	0x1A
	mov	[last_tick], dx		; Stash last tick count (least-significant WORD)
.delay:
	mov	ah, 0
	int	0x1A
	mov	cx, [last_tick]
	cmp	dx, cx			; Compare to current tick count...
	je	.delay			; ...if still equal, try again
	
	; Check for keystroke (without blocking/hanging, using BIOS)
	mov	ah, 0x01
	int	0x16
	jnz	.breakout
	
	; Next cycle
	inc	di			; Cycle colors continuously
	jmp	.palcycle
.breakout:
	
	; Turn off the mouse cursor
	mov	ax, 0x0002
	int	0x33
	
	; Resume 80-column text mode
	mov	ax, 0x0003
	int	0x10
	
	; Quit to DOS
	mov	ah, 0x4C
	int	0x21
